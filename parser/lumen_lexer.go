// Generated from Lumen.g by ANTLR 4.6.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 1072, 54993, 33286, 44333, 17431, 44785, 36224, 43741, 2, 36, 204, 8,
	1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7, 9,
	7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12, 4,
	13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4, 18,
	9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23, 9,
	23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9, 28,
	4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33, 4,
	34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 3, 2, 3, 2, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9,
	3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3,
	13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16,
	3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 21, 3,
	21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26,
	3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3,
	29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 32, 6, 32, 152,
	10, 32, 13, 32, 14, 32, 153, 3, 32, 3, 32, 6, 32, 158, 10, 32, 13, 32,
	14, 32, 159, 5, 32, 162, 10, 32, 3, 32, 3, 32, 5, 32, 166, 10, 32, 3, 32,
	6, 32, 169, 10, 32, 13, 32, 14, 32, 170, 5, 32, 173, 10, 32, 3, 33, 3,
	33, 3, 33, 7, 33, 178, 10, 33, 12, 33, 14, 33, 181, 11, 33, 3, 34, 3, 34,
	3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 36, 7, 36, 191, 10, 36, 12, 36, 14,
	36, 194, 11, 36, 3, 36, 3, 36, 3, 37, 6, 37, 199, 10, 37, 13, 37, 14, 37,
	200, 3, 37, 3, 37, 2, 2, 38, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15,
	9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33,
	18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51,
	27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 2, 69,
	2, 71, 35, 73, 36, 3, 2, 8, 3, 2, 50, 59, 4, 2, 71, 71, 103, 103, 4, 2,
	45, 45, 47, 47, 5, 2, 67, 92, 97, 97, 99, 124, 4, 2, 12, 12, 15, 15, 5,
	2, 11, 12, 15, 15, 34, 34, 211, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2,
	7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2,
	2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2,
	2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2,
	2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3,
	2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45,
	3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2,
	53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2,
	2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 71, 3, 2, 2,
	2, 2, 73, 3, 2, 2, 2, 3, 75, 3, 2, 2, 2, 5, 77, 3, 2, 2, 2, 7, 79, 3, 2,
	2, 2, 9, 81, 3, 2, 2, 2, 11, 83, 3, 2, 2, 2, 13, 85, 3, 2, 2, 2, 15, 87,
	3, 2, 2, 2, 17, 89, 3, 2, 2, 2, 19, 92, 3, 2, 2, 2, 21, 95, 3, 2, 2, 2,
	23, 97, 3, 2, 2, 2, 25, 99, 3, 2, 2, 2, 27, 102, 3, 2, 2, 2, 29, 105, 3,
	2, 2, 2, 31, 108, 3, 2, 2, 2, 33, 111, 3, 2, 2, 2, 35, 113, 3, 2, 2, 2,
	37, 115, 3, 2, 2, 2, 39, 117, 3, 2, 2, 2, 41, 120, 3, 2, 2, 2, 43, 123,
	3, 2, 2, 2, 45, 125, 3, 2, 2, 2, 47, 127, 3, 2, 2, 2, 49, 129, 3, 2, 2,
	2, 51, 131, 3, 2, 2, 2, 53, 133, 3, 2, 2, 2, 55, 140, 3, 2, 2, 2, 57, 142,
	3, 2, 2, 2, 59, 145, 3, 2, 2, 2, 61, 147, 3, 2, 2, 2, 63, 151, 3, 2, 2,
	2, 65, 174, 3, 2, 2, 2, 67, 182, 3, 2, 2, 2, 69, 184, 3, 2, 2, 2, 71, 186,
	3, 2, 2, 2, 73, 198, 3, 2, 2, 2, 75, 76, 7, 45, 2, 2, 76, 4, 3, 2, 2, 2,
	77, 78, 7, 47, 2, 2, 78, 6, 3, 2, 2, 2, 79, 80, 7, 128, 2, 2, 80, 8, 3,
	2, 2, 2, 81, 82, 7, 35, 2, 2, 82, 10, 3, 2, 2, 2, 83, 84, 7, 44, 2, 2,
	84, 12, 3, 2, 2, 2, 85, 86, 7, 49, 2, 2, 86, 14, 3, 2, 2, 2, 87, 88, 7,
	39, 2, 2, 88, 16, 3, 2, 2, 2, 89, 90, 7, 62, 2, 2, 90, 91, 7, 62, 2, 2,
	91, 18, 3, 2, 2, 2, 92, 93, 7, 64, 2, 2, 93, 94, 7, 64, 2, 2, 94, 20, 3,
	2, 2, 2, 95, 96, 7, 62, 2, 2, 96, 22, 3, 2, 2, 2, 97, 98, 7, 64, 2, 2,
	98, 24, 3, 2, 2, 2, 99, 100, 7, 62, 2, 2, 100, 101, 7, 63, 2, 2, 101, 26,
	3, 2, 2, 2, 102, 103, 7, 64, 2, 2, 103, 104, 7, 63, 2, 2, 104, 28, 3, 2,
	2, 2, 105, 106, 7, 63, 2, 2, 106, 107, 7, 63, 2, 2, 107, 30, 3, 2, 2, 2,
	108, 109, 7, 35, 2, 2, 109, 110, 7, 63, 2, 2, 110, 32, 3, 2, 2, 2, 111,
	112, 7, 40, 2, 2, 112, 34, 3, 2, 2, 2, 113, 114, 7, 96, 2, 2, 114, 36,
	3, 2, 2, 2, 115, 116, 7, 126, 2, 2, 116, 38, 3, 2, 2, 2, 117, 118, 7, 40,
	2, 2, 118, 119, 7, 40, 2, 2, 119, 40, 3, 2, 2, 2, 120, 121, 7, 126, 2,
	2, 121, 122, 7, 126, 2, 2, 122, 42, 3, 2, 2, 2, 123, 124, 7, 42, 2, 2,
	124, 44, 3, 2, 2, 2, 125, 126, 7, 46, 2, 2, 126, 46, 3, 2, 2, 2, 127, 128,
	7, 43, 2, 2, 128, 48, 3, 2, 2, 2, 129, 130, 7, 63, 2, 2, 130, 50, 3, 2,
	2, 2, 131, 132, 7, 61, 2, 2, 132, 52, 3, 2, 2, 2, 133, 134, 7, 117, 2,
	2, 134, 135, 7, 106, 2, 2, 135, 136, 7, 99, 2, 2, 136, 137, 7, 102, 2,
	2, 137, 138, 7, 103, 2, 2, 138, 139, 7, 116, 2, 2, 139, 54, 3, 2, 2, 2,
	140, 141, 7, 125, 2, 2, 141, 56, 3, 2, 2, 2, 142, 143, 7, 120, 2, 2, 143,
	144, 7, 117, 2, 2, 144, 58, 3, 2, 2, 2, 145, 146, 7, 127, 2, 2, 146, 60,
	3, 2, 2, 2, 147, 148, 7, 104, 2, 2, 148, 149, 7, 117, 2, 2, 149, 62, 3,
	2, 2, 2, 150, 152, 9, 2, 2, 2, 151, 150, 3, 2, 2, 2, 152, 153, 3, 2, 2,
	2, 153, 151, 3, 2, 2, 2, 153, 154, 3, 2, 2, 2, 154, 161, 3, 2, 2, 2, 155,
	157, 7, 48, 2, 2, 156, 158, 9, 2, 2, 2, 157, 156, 3, 2, 2, 2, 158, 159,
	3, 2, 2, 2, 159, 157, 3, 2, 2, 2, 159, 160, 3, 2, 2, 2, 160, 162, 3, 2,
	2, 2, 161, 155, 3, 2, 2, 2, 161, 162, 3, 2, 2, 2, 162, 172, 3, 2, 2, 2,
	163, 165, 9, 3, 2, 2, 164, 166, 9, 4, 2, 2, 165, 164, 3, 2, 2, 2, 165,
	166, 3, 2, 2, 2, 166, 168, 3, 2, 2, 2, 167, 169, 9, 2, 2, 2, 168, 167,
	3, 2, 2, 2, 169, 170, 3, 2, 2, 2, 170, 168, 3, 2, 2, 2, 170, 171, 3, 2,
	2, 2, 171, 173, 3, 2, 2, 2, 172, 163, 3, 2, 2, 2, 172, 173, 3, 2, 2, 2,
	173, 64, 3, 2, 2, 2, 174, 179, 5, 67, 34, 2, 175, 178, 5, 67, 34, 2, 176,
	178, 5, 69, 35, 2, 177, 175, 3, 2, 2, 2, 177, 176, 3, 2, 2, 2, 178, 181,
	3, 2, 2, 2, 179, 177, 3, 2, 2, 2, 179, 180, 3, 2, 2, 2, 180, 66, 3, 2,
	2, 2, 181, 179, 3, 2, 2, 2, 182, 183, 9, 5, 2, 2, 183, 68, 3, 2, 2, 2,
	184, 185, 9, 2, 2, 2, 185, 70, 3, 2, 2, 2, 186, 187, 7, 49, 2, 2, 187,
	188, 7, 49, 2, 2, 188, 192, 3, 2, 2, 2, 189, 191, 10, 6, 2, 2, 190, 189,
	3, 2, 2, 2, 191, 194, 3, 2, 2, 2, 192, 190, 3, 2, 2, 2, 192, 193, 3, 2,
	2, 2, 193, 195, 3, 2, 2, 2, 194, 192, 3, 2, 2, 2, 195, 196, 8, 36, 2, 2,
	196, 72, 3, 2, 2, 2, 197, 199, 9, 7, 2, 2, 198, 197, 3, 2, 2, 2, 199, 200,
	3, 2, 2, 2, 200, 198, 3, 2, 2, 2, 200, 201, 3, 2, 2, 2, 201, 202, 3, 2,
	2, 2, 202, 203, 8, 37, 2, 2, 203, 74, 3, 2, 2, 2, 13, 2, 153, 159, 161,
	165, 170, 172, 177, 179, 192, 200, 3, 2, 3, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'+'", "'-'", "'~'", "'!'", "'*'", "'/'", "'%'", "'<<'", "'>>'", "'<'",
	"'>'", "'<='", "'>='", "'=='", "'!='", "'&'", "'^'", "'|'", "'&&'", "'||'",
	"'('", "','", "')'", "'='", "';'", "'shader'", "'{'", "'vs'", "'}'", "'fs'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "", "", "", "", "", "", "", "", "", "NUM", "ID", "SINGLE_LINE_COMMENT",
	"WS",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
	"T__25", "T__26", "T__27", "T__28", "T__29", "NUM", "ID", "Letter", "DecimalDigit",
	"SINGLE_LINE_COMMENT", "WS",
}

type LumenLexer struct {
	*antlr.BaseLexer
	modeNames []string
	// TODO: EOF string
}

func NewLumenLexer(input antlr.CharStream) *LumenLexer {
	var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}

	l := new(LumenLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Lumen.g"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// LumenLexer tokens.
const (
	LumenLexerT__0                = 1
	LumenLexerT__1                = 2
	LumenLexerT__2                = 3
	LumenLexerT__3                = 4
	LumenLexerT__4                = 5
	LumenLexerT__5                = 6
	LumenLexerT__6                = 7
	LumenLexerT__7                = 8
	LumenLexerT__8                = 9
	LumenLexerT__9                = 10
	LumenLexerT__10               = 11
	LumenLexerT__11               = 12
	LumenLexerT__12               = 13
	LumenLexerT__13               = 14
	LumenLexerT__14               = 15
	LumenLexerT__15               = 16
	LumenLexerT__16               = 17
	LumenLexerT__17               = 18
	LumenLexerT__18               = 19
	LumenLexerT__19               = 20
	LumenLexerT__20               = 21
	LumenLexerT__21               = 22
	LumenLexerT__22               = 23
	LumenLexerT__23               = 24
	LumenLexerT__24               = 25
	LumenLexerT__25               = 26
	LumenLexerT__26               = 27
	LumenLexerT__27               = 28
	LumenLexerT__28               = 29
	LumenLexerT__29               = 30
	LumenLexerNUM                 = 31
	LumenLexerID                  = 32
	LumenLexerSINGLE_LINE_COMMENT = 33
	LumenLexerWS                  = 34
)
